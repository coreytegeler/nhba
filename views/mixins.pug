//- PUBLIC
mixin thumb(building)
	-var imageUrl = null
	if(building.images)
		-var images = building.images
		if(images.length)
			-var image = images[0]
			-var imageUrl = image.small
	else
		-var images = undefined

	if(imageUrl)
		img(src='http://ec2-54-208-156-193.compute-1.amazonaws.com'+imageUrl)
	else
		.img

//- ADMIN
mixin input(name, label, type, value, required)
	//- DELETE THIS WHEN SITE IS READY
	-required = false
	//- DELETE THIS WHEN SITE IS READY
	if(label)
		label(name=name) #{label}
	input(name=name, class=name, type=type, value=(value ? value : ''), required=(required ? true : false), autocomplete=false)

mixin images(name, images, required)
	label(name=name)
		| Images 
		span.instruct Drag to reorder
	.images.sortable
		input(name='images', type='text', value=images)
		li.image.edit.sample(data-type='image')
			img
		ul
			if(images)
				each image, index in images
					li.image.edit(data-id=image.id, data-type='image')
						img(src='http://ec2-54-208-156-193.compute-1.amazonaws.com'+image.small)
	.add.button(data-model='image') Add Image
	.clear.button Clear All

mixin image(name)
	label(name=name) Image
	input(name=name, class=name, type='file', required=true)

mixin textarea(name, label, value)
	label(name=name) !{label}
	textarea(name=name, rows=10) #{value ? value : ''}

mixin checkboxes(type, name, multiple, addable, value)
	label #{name}
	.module.checkboxes.populate(data-type='checkboxes', data-model=type, class=type, data-checked=value)
		+checkbox(type, 'N/A', null, multiple, (value == null ? true : false))
	if(addable)
		.add.button(data-model=type) New

mixin checkbox(type, name, value, multiple, checked)
	if(type == 'color')
		-var style = 'background-color:'+value
		-var name = ''
	else
		-var style = ''
	.item.checkbox(class=(value || value != null ? value : 'empty'))
		input(type=(multiple ? 'checkbox' : 'radio'), value=(value ? value : 'null'), name=type, id=(type+'-'+value), checked=checked)
		label(class=type, style=style, data-pop='name', for=(type+'-'+value)) #{(name ? name : '')}

mixin dateselect(months, days)
	.input
		.item.date.selects
			.select.month(data-datetype='month')
				.display(data-datetype='month') Month
				.module.options.months(data-type='checkboxes', data-datetype='month')
					each month in months
						+checkbox('month', month, month, false, false)
			.select.day(data-datetype='day')
				.display(data-datetype='day') Day
				.module.options.days(data-type='checkboxes', data-datetype='day')
					- var day = 0
					while day < 31
						- day = day+1
						+checkbox('day', day, day, false, false)
			.select.year(data-datetype='year')
				.display(data-datetype='year') Year
				.module.options.years(data-type='checkboxes', data-datetype='year')
					-var year = parseInt(years.max)
					while year >= parseInt(years.min)
						+checkbox('year', year, year, false, false)
						- year = year-1

mixin coords(parent, title)
	.row.two
		label(name='point') #{title}
		.cell
			+input(parent+'.latitude', 'Latitude', 'text', (object ? object[parent].latitude : ''))
		.cell
			+input(parent+'.longitude', 'Longitude', 'text', (object ? object[parent].longitude : ''))

mixin filter(slug, name, model)
	li(class=name)
		.title(data-slug=slug)= name
		ul(class=name, data-slug=slug)
			for item in model
				li(class=item.type)
					a.filter(href='/?'+item.type+'='+item.slug, data-slug=item.slug, data-id=item.id, data-type=item.type) #{item.name}
