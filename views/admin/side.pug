aside
	.shadow
		if(user)
			header
				.tabs
					.tab.filter(data-section='filter', class=(sideSection == 'filter' ? 'selected' : ''))= 'Filters'
					.tab.glossary(data-section='glossary', class=(sideSection == 'glossary' ? 'selected' : ''))= 'Glossary'
					.tab.archive(data-section='archive', class=(sideSection == 'archive' ? 'selected' : ''))= 'Archive'

					.tabDown(class=(sideSection == 'profile' ? 'selected' : ''))
						.dropDown
							if(user.admin == 1)
								a.tab.profile(href='/admin/users', class=(sideSection == 'profile' ? 'selected' : ''))
									span= 'Users'
							a.tab.profile(href='/admin/profile')
								span= 'Profile'
							a.tab.logout(href='/admin/logout')
								span= 'Logout'

					a(href='/admin/info/').tab.info.button
			.inner
				section#glossary(class=(sideSection == 'glossary' ? 'show' : ''))
					ul.group.edit
						ul.terms(class=(loadedType.p == 'terms' ? 'open' : ''))
							li.add
								a(href='/admin/term/new')= 'Add Glossary Term'
							-var currentAlpha
							-var terms = models['term']
							for term in terms
								-var termAlpha = term.name.charAt(0)
								if(termAlpha != currentAlpha)
									-currentAlpha = termAlpha
									.alpha= termAlpha
								a.term(href='/admin/term/edit/'+term.slug, class=(loadedSlug == term.slug ? 'selected' : ''))
									.name= term.name
				section#archive(class=(sideSection == 'archive' ? 'show' : ''))
					ul.buildings
						li.add
							a(href='/admin/building/new')= 'Add Building'
						-var buildings = models['buildings']
						for building in buildings
							li(class=building.slug)
								a(href='/admin/building/edit/'+building.slug, class=(loadedSlug == building.slug ? 'selected' : ''))= building.address
				section#filter(class=(sideSection == 'filter' ? 'show' : ''))
					ul.group.edit.nested
						li.uses
							.title(data-slug='uses' class=(loadedType.p == 'uses' ? 'toggled' : '')) Use
							ul.uses(data-slug='uses', class=(loadedType.p == 'uses' ? 'open' : ''))
								li.add
									a(href='/admin/use/new')= 'Add Use'
								-var uses = models['use']
								for use, useType in uses
									if(useType.length && uses[useType].uses)
										li.useType.withSub
											.title(data-slug=useType, class=(uses[useType].uses[loadedSlug] ? 'toggled' : ''))= uses[useType].name
											ul.sub(class=(uses[useType].uses[loadedSlug] ? 'open' : ''), data-slug=useType)
												for use in uses[useType].uses
													li(class=use.slug)
														a(href='/admin/use/edit/'+use.slug, class=(loadedSlug == use.slug ? 'selected' : ''))= use.name
								for use, useType in uses
									if(!useType.length)
										li(class=use.slug)
											a(href='/admin/use/edit/'+use.slug, class=(loadedSlug == use.slug ? 'selected' : ''))= use.name
						li.styles
							.title(data-slug='styles' class=(loadedType.p == 'styles' ? 'toggled' : '')) Style
							ul.styles(data-slug='styles', class=(loadedType.p == 'styles' ? 'open' : ''))
								li.add
									a(href='/admin/style/new')= 'Add Style'
								-var styles = models['style']
								for style in styles
									li(class=style.slug)
										a(href='/admin/style/edit/'+style.slug, class=(loadedSlug == style.slug ? 'selected' : ''))= style.name
						li.neighborhoods
							.title(data-slug='neighborhoods' class=(loadedType.p == 'neighborhoods' ? 'toggled' : '')) Neighborhood
							ul.neighborhoods(data-slug='neighborhoods', class=(loadedType.p == 'neighborhoods' ? 'open' : ''))
								li.add
									a(href='/admin/neighborhood/new')= 'Add Neighborhood'
								-var neighborhoods = models['neighborhood']
								for neighborhood in neighborhoods
									li(class=neighborhood.slug)
										a(href='/admin/neighborhood/edit/'+neighborhood.slug, class=(loadedSlug == neighborhood.slug ? 'selected' : ''))= neighborhood.name
						li.tours
							.title(data-slug='tours' class=(loadedType.p == 'tours' ? 'toggled' : '')) Tour
							ul.tours(data-slug='tours', class=(loadedType.p == 'tours' ? 'open' : ''))
								li.add
									a(href='/admin/tour/new')= 'Add Tour'
								-var tours = models['tour']
								for tour in tours
									li(class=tour.slug)
										a(href='/admin/tour/edit/'+tour.slug, class=(loadedSlug == tour.slug ? 'selected' : ''))= tour.name
		else
			.inner
				section#login.show
					h1 Login
					if (message)
						h1 #{message}
					form(action='/admin/login' method='post')
						.row
							+input('email', 'Email', 'email')
						.row
							+input('password', 'Password', 'password')
						.row
							input.button(type='submit' value='Login')
								